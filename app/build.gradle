plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlinx-serialization'
    id("com.google.devtools.ksp")
    id 'androidx.navigation.safeargs.kotlin'
}

// In your build.gradle file
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

def resendApiKey = localProperties.getProperty('RESEND_API_KEY')

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.paparazziapps.pretamistapp"
        minSdk 26
        targetSdk 34
        multiDexEnabled true
        versionCode 9
        versionName "5.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                nativeSymbolUploadEnabled true
                strippedNativeLibsDir 'build/intermediates/stripped_native_libs/release/out/lib'
                unstrippedNativeLibsDir 'build/intermediates/merged_native_libs/release/out/lib'
            }

            buildConfigField("String", "RESEND_API_KEY", "\"$resendApiKey\"")
        }

        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "RESEND_API_KEY", "\"$resendApiKey\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }

    buildFeatures {
        buildConfig = true
        flavorDimensions = ["version"]
    }

    productFlavors {
        free {
            dimension "version"
            //applicationIdSuffix ".free"
            //versionNameSuffix "-free"
        }
        dev {
            dimension "version"
            //applicationIdSuffix ".dev"
            //versionNameSuffix "-dev"
        }
    }



    namespace 'com.paparazziapps.pretamistapp'



}

task printVersionName {
    doLast {
        println android.defaultConfig.versionName
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-firestore-ktx:23.0.3'
    implementation 'com.google.firebase:firebase-storage-ktx:20.0.0'
    implementation 'com.google.firebase:firebase-firestore:24.0.2'
    implementation 'androidx.lifecycle:lifecycle-process:2.5.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.google.code.gson:gson:2.9.0'

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3")
    implementation 'com.wdullaer:materialdatetimepicker:4.2.3'

    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    implementation 'com.google.firebase:firebase-database-ktx'

    def nav_version = "2.8.0"
    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:$nav_version")

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:30.0.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //Cloud Firestore
    implementation 'com.google.firebase:firebase-firestore:20.0.0'
    implementation 'com.google.firebase:firebase-auth:18.0.0'
    implementation 'com.google.firebase:firebase-core:17.0.0'

    def lifecycle_version = "2.8.5"
    //implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")

    implementation 'androidx.multidex:multidex:2.0.1'

    def koin_version = "4.0.0"
    //Koin dependency injection
    implementation("io.insert-koin:koin-android:$koin_version")

    //Animation
    def lottieVersion = "6.6.0"
    implementation ("com.airbnb.android:lottie:$lottieVersion")

    //Retrofit
    def retrofit_version = "2.11.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //Interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'

}